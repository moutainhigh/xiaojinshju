package fengkongweishi.entity.customersearchlog;

import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import fengkongweishi.annotation.Info;
import fengkongweishi.enums.Level;
import fengkongweishi.handle.DateTimeSerializer;

import java.util.Date;

/**
 * 查询列表
 *
 * @author duyiting
 * @date 2018/01/17
 */
public class CustomerSearchLogVo {

    private Integer id;
    private String name;
    private String mobile;
    private String idCard;
    private Date lastQueryTime;
    private String status;
    private Level level;
    private String createdByName;
    private Integer reportId;
    @Info(label = "备注记录条数", tip = "", placeholder = "", help = "", secret = "")
    private Integer customerNote;
    private String edition;
    private Date reportTime;
    private Integer customerId;
    private String sex;
    private String no;
    private String pdfUrl;


    public CustomerSearchLogVo(CustomerSearchLog customerSearchLog) {
        this.id = customerSearchLog.getId();
        this.name = customerSearchLog.getCustomer().getName();
        this.mobile = customerSearchLog.getCustomer().getMobile();
        this.idCard = customerSearchLog.getCustomer().getIdCard();
        this.lastQueryTime = customerSearchLog.getReport().getCreateAt();
        this.status = customerSearchLog.getReport().getStatus().getMessage();
        if (customerSearchLog.getReport().getLevel() == null) {
            this.level = null;
        } else {
            this.level = customerSearchLog.getReport().getLevel();
        }
        this.createdByName = customerSearchLog.getCreateBy().getNickname();
        this.reportId = customerSearchLog.getReport().getId();
        this.customerNote = customerSearchLog.getCustomer().getEvaluations().size();
        this.edition = customerSearchLog.getReport().getEdition().getMessage();
        this.reportTime = customerSearchLog.getReport().getFinishAt();
        this.customerId = customerSearchLog.getCustomer().getId();
        int length = this.idCard.length();
        if (length == 18) {
            int sexNumber = Integer.valueOf(this.idCard.substring(length - 2, length - 1));
            this.sex = sexNumber % 2 == 0 ? "女" : "男";
        } else if (length == 15) {
            int sexNumber = Integer.valueOf(this.idCard.substring(length - 1, length));
            this.sex = sexNumber % 2 == 0 ? "女" : "男";
        } else {
            this.sex = "";
        }
        this.no = customerSearchLog.getReport().getNo();
        this.pdfUrl = customerSearchLog.getReport().getPdfUrl();
    }


    public String getPdfUrl() {
        return pdfUrl;
    }

    public String getNo() {
        return no;
    }

    public Integer getId() {
        return id;
    }

    public String getName() {
        return name;
    }

    public String getMobile() {
        return mobile;
    }

    public String getIdCard() {
        return idCard;
    }

    @JsonSerialize(using = DateTimeSerializer.class)
    public Date getLastQueryTime() {
        return lastQueryTime;
    }

    public String getStatus() {
        return status;
    }

    public Level getLevel() {
        return level;
    }

    public String getCreatedByName() {
        return createdByName;
    }

    public Integer getReportId() {
        return reportId;
    }

    public Integer getCustomerNote() {
        return customerNote;
    }

    public String getEdition() {
        return edition;
    }

    @JsonSerialize(using = DateTimeSerializer.class)
    public Date getReportTime() {
        return reportTime;
    }

    public Integer getCustomerId() {
        return customerId;
    }

    public String getSex() {
        return sex;
    }
}
